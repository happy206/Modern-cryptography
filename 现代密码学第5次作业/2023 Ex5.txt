1. 请实现(t, w)-Shamir门限方案（密码体制13.1），给定公共参数t、w和p，可以实现功能：
给定t个份额(x, y)之后，还原出秘密k，同时给坐标为x'的参与者分享新的份额y'

示例：  
Input.in  
3 5 19（注：这是t w p）
1 1（注：这是x1 y1） 
3 4（注：这是x2 y2） 
5 6（注：这是x3 y3） 
10（注：这是x'）

Output.out
11 （注：这是k）
9 （注：这是y'）

2. 请根据给定参与者集合P（共有n个参与者）以及一个已知的授权子集集合α（共有x个元素），输出对应的访问结构γ的基γ0（以#结尾），然后构造基于CNF的单调布尔电路并输出CNF的所有合取式（以#结尾）和给定秘密k时对应的分发规则（以#结尾）。
要求：
集合和变量内部全部按照变量序号升序排列；
基γ0中的最小授权子集按照变量序号升序排列（例如，{P1, P2, P4}排在{P2, P3}之前，{P2, P3}排在{P2, P4, P5}之前）；
CNF中的析取式（或门）按照变量序号升序排列（例如，P1vP2排在P2vP3之前，P2vP3排在P2vP4之前）；
分发规则中的变量命名为a，需要按照线的出现顺序升序排列（例如，a_1、a_2、a_3等），如果与门输入线数量为m，则令a_m = k - a_1 - a_2 - ... - a_{m-1}，输出分发规则时输出变量下标即可。

示例：  
Input.in  
4（注：这是n）
4（注：这是x，下面分别是x个授权子集，每个子集中包含了参与者的序号）
1 2 4 
1 3 4
2 3 
1 2 3
 
Output.out
1 2 4
1 3 4
2 3
#（注：这是γ0）
1 2（注：表示P1vP2，以此类推）
1 3
2 3
2 4
3 4
#
1 2（注：表示f(P1) = (a_1, a_2)，以此类推）
1 3 4
2 3 5（注：表示f(P3) = (a_2, a_3, k - a_1 - a_2 - a_3 - a_4)，以此类推）
4 5 
#

邮件题目：学号-姓名-现代密码学第X次作业
源代码文件名：学号-X-Y
（Y是题号）
邮件内容：说明语言和编译环境